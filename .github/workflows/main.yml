name: On Push
on:
  push:
    branches: [main, dev]
  workflow_dispatch:

jobs:
  autogenerate-pdf:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - run: git config --global user.name 'James Spears ðŸ¤–'
      - run: git config --global user.email 'james.w.spears@gmail.com'

      - name: Compile LaTeX document
        uses: xu-cheng/latex-action@v3
        with:
          root_file: src/resume.tex
        env:
          TEXINPUTS: ".:./src//:"

      - name: Git pull
        run: git pull

      - name: Git add
        run: git add .

      - name: Git commit
        run: git diff-index --quiet HEAD || git commit -m "Resume PDF updated [skip ci]"

      - name: Git push
        run: git push

  autogenerate-docx:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - run: git config --global user.name 'James Spears ðŸ¤–'
      - run: git config --global user.email 'james.w.spears@gmail.com'

      - name: Compile LaTeX document
        uses: docker://pandoc/core:2.9
        with:
          args: >- # allows you to break string into multiple lines
            -s ./src/resume.tex
            -o resume.docx 
            --resource-path ./src

      - name: Git pull
        run: git pull

      - name: Git add
        run: git add .

      - name: Git commit
        run: git diff-index --quiet HEAD || git commit -m "Resume DOCX updated [skip ci]"

      - name: Git push
        run: git push

  version-bump:
    runs-on: ubuntu-latest
    needs: [autogenerate-pdf, autogenerate-docx]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - run: git config --global user.name 'James Spears ðŸ¤–'
      - run: git config --global user.email 'james.w.spears@gmail.com'

      - name: Git pull
        run: git pull

      - name: Patch version
        if: endsWith(github.ref, '/main')
        run: echo "version=$(npm version patch -m 'Bump version v%s [skip ci]')" >> $GITHUB_ENV

      - name: Pre patch version
        if: endsWith(github.ref, '/dev')
        run: echo "version=$(npm version prerelease -m 'Bump version v%s [skip ci]')" >> $GITHUB_ENV

      - name: Git push
        run: git push

      - name: Create Tag
        run: git push origin ${{ env.version }}

      - name: Create release
        uses: actions/github-script@v7
        env:
          RELEASE_TAG: ${{ env.version }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            try {
              await github.rest.repos.createRelease({
                draft: false,
                generate_release_notes: true,
                name: process.env.RELEASE_TAG,
                owner: context.repo.owner,
                prerelease: process.env.RELEASE_TAG.includes('-') ? true : false,
                repo: context.repo.repo,
                tag_name: process.env.RELEASE_TAG,
              });
            } catch (error) {
              core.setFailed(error.message);
            }

  deploy:
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-latest
    needs: version-bump
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::989966476585:role/ci
          aws-region: us-east-1

      - name: Deploy static site to S3 bucket
        run: aws s3 sync ./ s3://james-spears.com --delete --acl public-read
